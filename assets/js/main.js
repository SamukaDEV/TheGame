enchant(); // Faz a chamada, de configuração local do projeto

var __width = window.innerWidth;
var __height = window.innerHeight;
var game = null;
var player = null;

window.onload = function () {
    game = new Game(__width, __height);
    game.fps = 30; // FPS Global do game
    game.preload(
        'assets/imgs/chara5.png',
        'assets/imgs/icon0.png',
        'assets/imgs/map1.png',
        'assets/imgs/map0.gif'
    );
    game.onload = function () {

        var lbl = new Label('Unidade USB');
        lbl.x = 100;
        lbl.y = 100;
        lbl.font = '30px Serif';
        game.rootScene.addChild(lbl);

        var backgroundMap = new Map(16, 16);
        backgroundMap.image = game.assets['assets/imgs/map0.gif'];
        backgroundMap.loadData([
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 221, 206, 206, 284, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 223, 107, 107, 107, 284, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 221, 206, 206, 206, 257, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 255, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 266, 227, 107, 107, 107],
            [107, 107, 107, 107, 221, 257, 107, 107, 107, 107, 107, 107, 107, 107, 341, 342, 342, 343, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 215, 261, 107, 107, 107],
            [107, 107, 107, 107, 241, 107, 107, 107, 20, 107, 107, 107, 107, 107, 107, 107, 107, 107, 341, 342, 342, 402, 362, 401, 342, 343, 107, 107, 107, 107, 107, 107, 107, 107, 284, 257, 107, 224, 107, 107],
            [107, 107, 107, 107, 241, 107, 107, 107, 51, 19, 107, 107, 107, 225, 227, 107, 107, 107, 107, 107, 107, 395, 347, 371, 107, 107, 107, 107, 107, 107, 107, 107, 221, 207, 107, 107, 107, 241, 107, 107],
            [107, 107, 107, 107, 241, 107, 107, 107, 107, 51, 19, 107, 107, 242, 208, 226, 227, 107, 107, 107, 360, 107, 395, 397, 107, 107, 107, 107, 107, 107, 107, 205, 257, 107, 107, 107, 107, 241, 107, 107],
            [107, 107, 107, 107, 241, 107, 107, 107, 107, 360, 51, 62, 23, 259, 260, 260, 261, 361, 362, 401, 392, 359, 107, 107, 107, 107, 107, 107, 107, 205, 207, 107, 107, 107, 107, 107, 107, 241, 107, 107],
            [107, 107, 107, 107, 241, 107, 107, 341, 402, 365, 363, 55, 10, 107, 107, 107, 107, 395, 347, 380, 107, 374, 343, 107, 107, 107, 107, 221, 207, 107, 107, 107, 107, 107, 107, 107, 107, 241, 107, 107],
            [107, 107, 107, 221, 257, 107, 107, 107, 395, 347, 344, 363, 51, 62, 23, 107, 107, 107, 395, 384, 342, 393, 107, 107, 107, 107, 284, 257, 107, 107, 107, 341, 358, 342, 359, 107, 107, 241, 107, 107],
            [107, 107, 107, 241, 107, 107, 382, 107, 107, 351, 396, 350, 107, 55, 44, 62, 23, 107, 107, 107, 107, 107, 107, 107, 107, 205, 257, 107, 107, 107, 382, 107, 377, 107, 377, 107, 107, 241, 107, 107],
            [107, 107, 107, 284, 107, 107, 107, 382, 107, 377, 107, 377, 107, 107, 107, 55, 10, 107, 107, 107, 107, 107, 107, 221, 207, 107, 107, 107, 107, 360, 107, 341, 393, 107, 394, 107, 107, 241, 107, 107],
            [107, 107, 107, 241, 107, 107, 360, 371, 107, 377, 107, 394, 107, 107, 107, 107, 51, 62, 23, 107, 107, 107, 221, 257, 107, 107, 107, 357, 342, 392, 343, 107, 107, 360, 107, 107, 221, 284, 107, 107],
            [107, 107, 107, 241, 107, 107, 377, 107, 107, 394, 107, 107, 107, 360, 107, 107, 107, 55, 44, 19, 107, 221, 257, 107, 107, 107, 107, 394, 107, 107, 107, 360, 107, 377, 107, 107, 241, 107, 107, 107],
            [107, 107, 107, 241, 107, 107, 377, 107, 360, 107, 107, 361, 401, 393, 107, 107, 107, 107, 107, 51, 19, 258, 107, 107, 341, 402, 363, 107, 107, 107, 107, 377, 107, 394, 107, 107, 241, 107, 107, 107],
            [107, 107, 107, 241, 107, 107, 377, 107, 377, 107, 341, 398, 397, 107, 107, 107, 107, 107, 221, 207, 51, 62, 23, 107, 107, 395, 384, 343, 107, 107, 107, 391, 359, 107, 107, 107, 241, 107, 107, 107],
            [107, 107, 107, 241, 107, 361, 365, 401, 392, 359, 107, 394, 107, 107, 107, 107, 284, 206, 257, 107, 107, 55, 8, 23, 107, 107, 107, 107, 360, 107, 382, 107, 371, 107, 107, 107, 258, 107, 107, 107],
            [107, 107, 107, 241, 107, 395, 347, 380, 107, 391, 343, 107, 107, 107, 107, 246, 107, 107, 107, 107, 107, 107, 55, 44, 19, 107, 107, 107, 377, 107, 107, 107, 394, 107, 107, 224, 107, 107, 107, 107],
            [107, 107, 107, 241, 107, 107, 395, 384, 343, 107, 107, 107, 107, 221, 207, 107, 107, 107, 107, 107, 107, 107, 107, 107, 51, 62, 23, 107, 391, 359, 107, 360, 107, 107, 107, 241, 107, 107, 107, 107],
            [107, 107, 107, 241, 107, 107, 107, 107, 107, 107, 107, 224, 107, 258, 107, 107, 107, 107, 361, 363, 107, 107, 107, 107, 224, 55, 8, 23, 107, 391, 342, 393, 107, 107, 107, 241, 107, 107, 107, 107],
            [107, 107, 107, 241, 107, 107, 107, 107, 107, 107, 205, 257, 107, 107, 107, 107, 361, 401, 385, 397, 107, 107, 107, 225, 229, 227, 55, 8, 23, 107, 107, 107, 107, 107, 107, 258, 107, 107, 107, 107],
            [107, 107, 107, 241, 107, 107, 107, 284, 107, 246, 107, 107, 107, 107, 361, 362, 349, 397, 107, 107, 360, 107, 107, 259, 260, 261, 107, 55, 10, 107, 107, 107, 107, 107, 224, 107, 107, 107, 107, 107],
            [107, 107, 107, 241, 107, 107, 107, 205, 207, 107, 107, 107, 361, 362, 345, 379, 380, 107, 107, 107, 377, 107, 107, 360, 107, 107, 107, 107, 51, 19, 107, 107, 107, 107, 241, 107, 107, 107, 107, 107],
            [107, 107, 284, 241, 107, 107, 246, 107, 107, 107, 361, 401, 385, 396, 396, 396, 397, 371, 107, 107, 368, 362, 401, 393, 107, 107, 107, 107, 107, 51, 3, 107, 107, 221, 257, 107, 284, 107, 107, 107],
            [107, 107, 107, 232, 227, 107, 107, 107, 107, 107, 395, 397, 107, 107, 107, 107, 107, 341, 342, 342, 385, 396, 397, 107, 107, 107, 107, 107, 107, 107, 107, 107, 221, 257, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 259, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 225, 265, 206, 257, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 255, 206, 266, 226, 226, 227, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 221, 206, 206, 249, 261, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 259, 260, 260, 248, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 257, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 284, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 284, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 284, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107],
            [107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107]
        ], [
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]);
        game.rootScene.addChild(backgroundMap);

        // var map = new Map(16, 16);
        // map.image = game.assets['assets/imgs/map1.png']
        // map.loadData(
        //     [
        //         [4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4,],
        //         [4, 5, 5, 5, 5, 5, 4, 2, 2, 2, 0],
        //         [4, 5, 4, 5, 4, 5, 4],
        //         [4, 5, 5, 5, 5, 5, 4],
        //         [4, 5, 4, 5, 4, 5, 4],
        //         [4, 5, 5, 5, 5, 5, 4],
        //         [4, 4, 4, 4, 4, 4, 4]
        //     ]
        // );
        // game.rootScene.addChild(map);

        var player_1 = new PlayerClass(300, 300);
        var player_2 = new PlayerClass(300, 250);
        var player_3 = new PlayerClass(350, 300);
        window.player_4 = new PlayerOne(350, 250);

        var pad = new Pad();
        pad.x = 100;
        pad.y = 300;
        game.rootScene.addChild(pad);

        game.rootScene.addChild(player_1);
        game.rootScene.addChild(player_2);
        game.rootScene.addChild(player_3);
        game.rootScene.addChild(player_4);

    }
    game.start();
}

document.addEventListener('keydown', function (e) {
    // console.log(e.keyCode);
    if (e.keyCode == 116)
        document.location.reload();
});

var PlayerClass = Class.create(Sprite, {
    initialize: function (x, y) {
        Sprite.call(this, 32, 32);
        var game = Game.instance;

        this.image = game.assets['assets/imgs/chara5.png'];
        this.scale(2);
        this.x = x;
        this.y = y;
        this.frame = 1;

        this.Animations = {
            down: [0, 0, 0, 1, 1, 1, 2, 2, 2],
            up: [27, 27, 27, 28, 28, 28, 29, 29, 29],
            left: [9, 9, 9, 10, 10, 10, 11, 11, 11],
            right: [18, 18, 18, 19, 19, 19, 20, 20, 20]
        }
        this.Speed = {
            left: 3,
            right: 3,
            up: 3,
            down: 3
        }
        // this.addEventListener(Event.ENTER_FRAME, function () {
        //     if (game.input.left) {
        //         this.x -= this.Speed.left;
        //         this.frame = this.Animations.left;
        //     }
        //     if (game.input.right) {
        //         this.x += this.Speed.right;
        //         this.frame = this.Animations.right;
        //     }
        //     if (game.input.up) {
        //         this.y -= this.Speed.up;
        //         this.frame = this.Animations.up;
        //     }
        //     if (game.input.down) {
        //         this.y += this.Speed.down;
        //         this.frame = this.Animations.down;
        //     }
        // });
    }
});

var PlayerOne = Class.create(PlayerClass, {
    initialize: function (x, y) {
        PlayerClass.call(this, x, y);
        var game = Game.instance;

        this.addEventListener(Event.ENTER_FRAME, function () {
            if (game.input.left) {
                this.x -= this.Speed.left;
                this.frame = this.Animations.left;
            }
            if (game.input.right) {
                this.x += this.Speed.right;
                this.frame = this.Animations.right;
            }
            if (game.input.up) {
                this.y -= this.Speed.up;
                this.frame = this.Animations.up;
            }
            if (game.input.down) {
                this.y += this.Speed.down;
                this.frame = this.Animations.down;
            }
        });
    }
});

// player = new Sprite(32, 32);
// player.image = game.assets['assets/imgs/chara5.png'];
// player.scale(2);
// player.x = (__width / 2) - (player.width / 2);
// player.y = (__height / 2) - (player.height / 2);
// player.frame = [0, 0, 0, 1, 1, 1, 2, 2, 2];
// player.moving = false;

// var Animations = {
//     down: [0, 0, 0, 1, 1, 1, 2, 2, 2],
//     up: [27, 27, 27, 28, 28, 28, 29, 29, 29],
//     left: [9, 9, 9, 10, 10, 10, 11, 11, 11],
//     right: [18, 18, 18, 19, 19, 19, 20, 20, 20]
// }

// var Speed = {
//     left: 3,
//     right: 3,
//     up: 3,
//     down: 3
// }

// player.addEventListener(Event.ENTER_FRAME, function () {
//     if (game.input.left) {
//         player.x -= Speed.left;
//         player.frame = Animations.left;
//     }
//     if (game.input.right) {
//         player.x += Speed.right;
//         player.frame = Animations.right;
//     }
//     if (game.input.up) {
//         player.y -= Speed.up;
//         player.frame = Animations.up;
//     }
//     if (game.input.down) {
//         player.y += Speed.down;
//         player.frame = Animations.down;
//     }
// });